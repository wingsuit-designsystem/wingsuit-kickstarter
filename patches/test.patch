diff --git a/core/modules/layout_builder/src/LayoutEntityHelperTrait.php b/core/modules/layout_builder/src/LayoutEntityHelperTrait.php
index 1abf322178..39193dc132 100644
--- a/core/modules/layout_builder/src/LayoutEntityHelperTrait.php
+++ b/core/modules/layout_builder/src/LayoutEntityHelperTrait.php
@@ -62,12 +62,14 @@ protected function getInlineBlockRevisionIdsInSections(array $sections) {
    *
    * @param \Drupal\Core\Entity\EntityInterface $entity
    *   The entity.
+   * @param string $view_mode
+   *   A view mode identifier.
    *
    * @return \Drupal\layout_builder\Section[]
    *   The entity layout sections if available.
    */
-  protected function getEntitySections(EntityInterface $entity) {
-    $section_storage = $this->getSectionStorageForEntity($entity);
+  protected function getEntitySections(EntityInterface $entity, $view_mode = 'full') {
+    $section_storage = $this->getSectionStorageForEntity($entity, $view_mode);
     return $section_storage ? $section_storage->getSections() : [];
   }
 
@@ -98,14 +100,13 @@ protected function getInlineBlockComponents(array $sections) {
    *
    * @param \Drupal\Core\Entity\EntityInterface $entity
    *   The entity.
+   * @param string $view_mode
+   *   A view mode identifier.
    *
    * @return \Drupal\layout_builder\SectionStorageInterface|null
-   *   The section storage if found otherwise NULL.
+   *   The section storage or NULL if its context requirements are not met.
    */
-  protected function getSectionStorageForEntity(EntityInterface $entity) {
-    // @todo Take into account other view modes in
-    //   https://www.drupal.org/node/3008924.
-    $view_mode = 'full';
+  protected function getSectionStorageForEntity(EntityInterface $entity, $view_mode = 'full') {
     if ($entity instanceof LayoutEntityDisplayInterface) {
       $contexts['display'] = EntityContext::fromEntity($entity);
       $contexts['view_mode'] = new Context(new ContextDefinition('string'), $entity->getMode());
